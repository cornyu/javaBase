该demo学习：
1.静态代理
2.利用反射技术实现动态代理

3.利用cglib技术实现动态代理
3.1 JDK实现动态代理需要实现类通过接口定义业务方法，对于没有接口的类，如何实现动态代理呢，这就需要CGLib了。CGLib采用了
	非常底层的字节码技术，其原理是通过字节码技术为一个类创建子类，并在子类中采用方法拦截的技术拦截所有父类方法的调用，
	顺势织入横切逻辑。JDK动态代理与CGLib动态代理均是实现Spring AOP的基础。
	CGLib创建的动态代理对象性能比JDK创建的动态代理对象的性能高不少，但是CGLib在创建代理对象时所花费的时间却比JDK多得多，
	所以对于单例的对象，因为无需频繁创建对象，用CGLib合适，反之，使用JDK方式要更为合适一些。同时，由于CGLib由于是采用动
	态创建子类的方法，对于final方法，无法进行代理。

