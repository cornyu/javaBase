1.Lock接口：
可以实现比synchronized更加复杂的逻辑，而且提供了更多特性，比如非阻塞的获取锁，能被中断的获取锁。


2.队列同步器
AbstractQueuedSynchronizer 用来构建锁或者其他同步组件的基础框架，他使用了一个int成员变量表示同步状态，通过内置的FIFO队列来完成
资源获取线程的排队工作。
主要使用方式是通过继承，子类通过继承同步器并实现它的抽象方法来管理同步状态；
常用的同步组件有：ReentrantLock , ReentrantReadWriteLock , CountDownLatch 等。


3.CyclicBarrier和CountDownLatch的区别

CountDownLatch的计数器只能使用一次。而CyclicBarrier的计数器可以使用reset() 方法重置。所以CyclicBarrier能处理更为复杂的业务场景，比如如果计算发生错误，可以重置计数器，并让线程们重新执行一次。
CyclicBarrier还提供其他有用的方法，比如getNumberWaiting方法可以获得CyclicBarrier阻塞的线程数量。isBroken方法用来知道阻塞的线程是否被中断。比如以下代码执行完之后会返回true。